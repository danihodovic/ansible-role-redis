---
- include_tasks: ./facts.yml

- name: Pull Sentinel container
  docker_image:
    source: pull
    name: redis:latest
    force: true

- name: Create Sentinel dir
  file:
    state: directory
    path: /opt/sentinel
    recurse: true

- name: Template Sentinel config
  register: template_config
  template:
    src: sentinel.conf
    dest: /opt/sentinel/sentinel.conf
    mode: 0666

- name: Start Sentinel
  docker_container:
    comparisons:
      '*': strict
    image: redis:latest
    name: sentinel
    restart_policy: unless-stopped
    restart: '{{ template_config.changed }}'
    entrypoint: ''
    command: redis-server /opt/sentinel/sentinel.conf --sentinel
    memory: '{{ ansible_memory_mb.real.total * 0.1 }}m'
    cpu_shares: '{{ (1024 * 0.1) | int }}'
    network_mode: host
    volumes:
      - '/opt/sentinel:/opt/sentinel'

- name: Wait for port
  wait_for:
    host: '{{ redis_bind_ip }}'
    port: 26379
    timeout: 30

- name: Check sentinel status
  changed_when: false
  shell: 'docker exec sentinel redis-cli -p 26379 INFO'
  retries: 10
  delay: 1
  register: _health
  until: "'sentinels=' + num_redis_sentinel in _health.stdout"
